<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <packaging>war</packaging>
    <name>${artifactId}</name>
    <description>${artifactId}</description>
    <!-- Properties -->
    <properties>
        <fuse.version>7.6.0.fuse-760027-redhat-00001</fuse.version>
        <version.org.apache.camel>2.21.0.fuse-760027-redhat-00001</version.org.apache.camel>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-war-plugin.version>3.3.0</maven-war-plugin.version>
        <wildfly-maven-plugin.version>2.0.2.Final</wildfly-maven-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <swagger.ui.version>3.28.0</swagger.ui.version>
        <swagger.codegen.version>2.4.14</swagger.codegen.version>
        <logstash.encoder.version>6.4</logstash.encoder.version>
        <primefaces.version>8.0</primefaces.version>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <!-- DependencyManagement -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.redhat-fuse</groupId>
                <artifactId>fuse-eap-bom</artifactId>
                <version>${fuse.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <!-- Dependencies -->
    <dependencies>
        <!-- Provided -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-cdi</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.jms</groupId>
            <artifactId>jboss-jms-api_2.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.transaction</groupId>
            <artifactId>jboss-transaction-api_1.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Swagger support for restdsl -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-swagger-java</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>swagger-ui</artifactId>
            <version>${swagger.ui.version}</version>
        </dependency>

        <!-- parsing rendering support -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jackson</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- calling rest services through http4 -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-http4</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--Camel Servlet -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-servlet</artifactId>
            <scope>provided</scope>
        </dependency>

#if (${cxfSupport} == 'true')
        <!--Camel CXF -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-cxf</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-soap</artifactId>
            <scope>provided</scope>
        </dependency>
#end

        <!--Camel jms -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jms</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--Circuit breaker-->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-hystrix</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--For database access -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-sql</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JSF API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.faces</groupId>
            <artifactId>jboss-jsf-api_2.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>

#if (${pfSupport} == 'true')
        <!-- PrimeFaces support -->
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>${primefaces.version}</version>
        </dependency>
#end
    </dependencies>
    <!-- Build -->
    <build>
        <finalName>${project.artifactId}</finalName>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${wildfly-maven-plugin.version}</version>
                <configuration>
                    <hostname>eap</hostname>
                    <port>9990</port>
                    <username>admin</username>
                    <password>admin</password>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <!-- Profiles -->
    <profiles>
        <!-- Separate profiles are provided for running tests, including Arquillian tests that execute in a specified container -->
        <profile>
            <!-- The default profile skips all tests, though you can tune it to run just unit tests based on a custom pattern -->
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- An optional Arquillian testing profile that executes tests in your container instance -->
            <!-- Run with: mvn clean test -Parq-managed -->
            <id>arq-managed</id>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <!-- An optional Arquillian testing profile that executes tests in a remote container instance -->
            <!-- Run with: mvn clean test -Parq-remote -->
            <id>arq-remote</id>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-remote</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>camelrestgen</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.camel</groupId>
                        <artifactId>camel-restdsl-swagger-plugin</artifactId>
                        <version>${version.org.apache.camel}</version>
                        <executions>
                            <execution>
                                <id>generate-sources</id>
                                <goals>
                                    <goal>generate-xml</goal>
                                </goals>
                                <configuration>
                                    <specificationUri>src/main/resources/swaggerdef/swagger.json</specificationUri>
                                    <outputDirectory>src/main/resources</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- generate code from swagger -->
        <profile>
            <id>swaggergen</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.swagger</groupId>
                        <artifactId>swagger-codegen-maven-plugin</artifactId>
                        <version>${swagger.codegen.version}</version>
                        <executions>
                            <execution>
                                <id>generate-sources</id>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <inputSpec>src/main/resources/swaggerdef/swagger.json</inputSpec>
                                    <language>jaxrs-cxf</language>
                                    <generateApis>false</generateApis>
                                    <generateSupportingFiles>false</generateSupportingFiles>
                                    <modelPackage>restsvc.model</modelPackage>
                                    <apiPackage>restsvc.api</apiPackage>
                                    <output>${basedir}/src/main/java</output>
                                    <generateApiTests>false</generateApiTests>
                                    <configOptions>
                                        <serializableModel>true</serializableModel>
                                        <withXml>true</withXml>
                                        <sourceFolder>./</sourceFolder>
                                        <implFolder>./../../../target/tmp</implFolder>
                                    </configOptions>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

#if (${cxfSupport} == 'true')
         <!-- generate code from a wsdl -->
        <profile>
            <id>cxfgen</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jboss.redhat-fuse</groupId>
                        <artifactId>cxf-codegen-plugin</artifactId>
                        <version>${cxf.codegen.version}</version>
                        <executions>
                            <execution>
                                <id>generate-sources</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>wsdl2java</goal>
                                </goals>
                                <configuration>
                                    <sourceRoot>${basedir}/src/main/java</sourceRoot>
                                    <wsdlOptions>
                                        <wsdlOption>
                                            <wsdl>${basedir}/src/main/resources/wsdl/contract.wsdl</wsdl>
                                            <wsdlLocation>classpath:wsdl/contract.wsdl</wsdlLocation>
                                            <bareMethods></bareMethods>
                                        </wsdlOption>
                                    </wsdlOptions>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
#end

    
    </profiles>
    <!-- Repositories -->
    <repositories>
        <repository>
            <id>redhat-ga-repository</id>
            <url>http://maven.repository.redhat.com/ga</url>
        </repository>
        <repository>
            <id>redhat-early-access-repository</id>
            <url>http://maven.repository.redhat.com/earlyaccess/all</url>
        </repository>
        <repository>
            <id>jboss-public-repository</id>
            <url>http://repository.jboss.org/nexus/content/groups/public/</url>
        </repository>
        <repository>
            <id>jboss-early-access-repository</id>
            <url>https://repository.jboss.org/nexus/content/groups/ea</url>
        </repository>
    </repositories>
</project>